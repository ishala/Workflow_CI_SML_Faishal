name: CI-MLFlow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CSV_URL: "cleaned_data.csv"
  N_COMPS: 3
  CONTAINER_NAME: "mobile-price-range-prediction"
  N_TRIALS: 30

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - uses: actions/checkout@v3

      # 2. Setup Python
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      # 3. Env preparations
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r MLProject/requirements.txt

      # 4. Run MLProject (train model)
      - name: Run MLProject
        run: |
          mlflow run MLProject/ --env-manager=local \
            -P dataset=$CSV_URL \
            -P ncomps=$N_COMPS \

      # 5. Upload artifacts (mlruns)
      - name: Upload MLflow results
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts
          path: mlruns/

      # 6. Commit artifacts back to repo
      - name: Commit MLflow artifacts
        if: ${{ hashFiles('mlruns/**') != '' }}
        run: |
          git config --global user.name ${{ secrets.username }}
          git config --global user.email ${{ secrets.email }}
          git add mlruns/
          git commit -m "Add latest MLflow artifacts [skip ci]" || echo "No changes to commit"
          git push origin main || echo "No changes to push"

      - name: Set up Git LFS
        if: ${{ hashFiles('mlruns/**') != '' }}
        run: | 
          git config --global user.name ${{ secrets.username }}
          git config --global user.email ${{ secrets.email }}
          git lfs install
          git lfs track "mlruns/**"
          git add .gitattributes
          git commit -m "Track large files in mlruns with Git LFS" || true
          git push origin main

      # 7. Get latest MLFlow run_id
      - name: Get latest MLFlow run_id
        run: |
          RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"

      # 8. Build Docker model
      - name: Build Docker Model
        run: |
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name $CONTAINER_NAME

      # 9. Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 10. Tag Docker Image
      - name: Tag Docker Image
        run: |
          docker tag $CONTAINER_NAME ${{ secrets.DOCKER_HUB_USERNAME }}/$CONTAINER_NAME:latest

      # 11. Push Docker Image
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$CONTAINER_NAME:latest